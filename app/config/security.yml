security:
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
         fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
            main:
                pattern: ^/
                form_login:
                    provider: fos_userbundle
                    csrf_provider: form.csrf_provider
                    login_path:     /login
                    use_forward:    false
                    check_path:     /login_check
                    always_use_default_target_path: false
                    default_target_path:    /becado
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider
                logout:
                    path: /logout
                    target: /login
                anonymous:    true
                
    access_control:
#        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: [ROLE_ADMIN] }
        - { path: ^/profile, role: [ROLE_USER, ROLE_ADMIN] }
        - { path: ^/resetting, role: [IS_USER, IS_ADMIN] }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/becado, role: [ROLE_USER, ROLE_ADMIN] }
        - { path: ^/certificacion, role: [ROLE_USER, ROLE_ADMIN] }
        - { path: ^/beca, role: [ROLE_USER, ROLE_ADMIN] }
