<?php

namespace Proxies\__CG__\BecasMds\BecaBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BecadoBeca extends \BecasMds\BecaBundle\Entity\BecadoBeca implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * {@inheritDoc}
     * @return array
     */
    public function __sleep()
    {
        $properties = array_merge(['__isInitialized__'], parent::__sleep());

        if ($this->__isInitialized__) {
            $properties = array_diff($properties, array_keys($this->__getLazyProperties()));
        }

        return $properties;
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BecadoBeca $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaAlta($fechaAlta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaAlta', [$fechaAlta]);

        return parent::setFechaAlta($fechaAlta);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaAlta()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaAlta', []);

        return parent::getFechaAlta();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaBaja($fechaBaja)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaBaja', [$fechaBaja]);

        return parent::setFechaBaja($fechaBaja);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaBaja()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaBaja', []);

        return parent::getFechaBaja();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivo($activo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivo', [$activo]);

        return parent::setActivo($activo);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivo', []);

        return parent::getActivo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetalles($detalles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetalles', [$detalles]);

        return parent::setDetalles($detalles);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetalles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetalles', []);

        return parent::getDetalles();
    }

    /**
     * {@inheritDoc}
     */
    public function setBecado(\BecasMds\PersonaBundle\Entity\Becado $becado = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBecado', [$becado]);

        return parent::setBecado($becado);
    }

    /**
     * {@inheritDoc}
     */
    public function getBecado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBecado', []);

        return parent::getBecado();
    }

    /**
     * {@inheritDoc}
     */
    public function setBeca(\BecasMds\BecaBundle\Entity\Beca $beca = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBeca', [$beca]);

        return parent::setBeca($beca);
    }

    /**
     * {@inheritDoc}
     */
    public function getBecadoString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBecadoString', []);

        return parent::getBecadoString();
    }

    /**
     * {@inheritDoc}
     */
    public function getBeca()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBeca', []);

        return parent::getBeca();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function addCertificacion(\BecasMds\CertificacionBundle\Entity\Certificacion $certificacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCertificacion', [$certificacion]);

        return parent::addCertificacion($certificacion);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCertificacion(\BecasMds\CertificacionBundle\Entity\Certificacion $certificacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCertificacion', [$certificacion]);

        return parent::removeCertificacion($certificacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getCertificacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertificacion', []);

        return parent::getCertificacion();
    }

    /**
     * {@inheritDoc}
     */
    public function getBecas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBecas', []);

        return parent::getBecas();
    }

    /**
     * {@inheritDoc}
     */
    public function setBecaVulnerable(\BecasMds\BecaBundle\Entity\BecaVulnerable $becaVulnerable = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBecaVulnerable', [$becaVulnerable]);

        return parent::setBecaVulnerable($becaVulnerable);
    }

    /**
     * {@inheritDoc}
     */
    public function getBecaVulnerable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBecaVulnerable', []);

        return parent::getBecaVulnerable();
    }

}
