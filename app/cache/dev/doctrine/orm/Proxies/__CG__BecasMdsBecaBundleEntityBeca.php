<?php

namespace Proxies\__CG__\BecasMds\BecaBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Beca extends \BecasMds\BecaBundle\Entity\Beca implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setMonto($monto)
    {
        $this->__load();
        return parent::setMonto($monto);
    }

    public function getMonto()
    {
        $this->__load();
        return parent::getMonto();
    }

    public function setActivo($activo)
    {
        $this->__load();
        return parent::setActivo($activo);
    }

    public function getActivo()
    {
        $this->__load();
        return parent::getActivo();
    }

    public function setFechaAlta($fechaAlta)
    {
        $this->__load();
        return parent::setFechaAlta($fechaAlta);
    }

    public function getFechaAlta()
    {
        $this->__load();
        return parent::getFechaAlta();
    }

    public function setFechaBaja($fechaBaja)
    {
        $this->__load();
        return parent::setFechaBaja($fechaBaja);
    }

    public function getFechaBaja()
    {
        $this->__load();
        return parent::getFechaBaja();
    }

    public function setTipoBeca(\BecasMds\BecaBundle\Entity\TipoBeca $tipoBeca = NULL)
    {
        $this->__load();
        return parent::setTipoBeca($tipoBeca);
    }

    public function getTipoBeca()
    {
        $this->__load();
        return parent::getTipoBeca();
    }

    public function setTipoFuncion(\BecasMds\BecaBundle\Entity\TipoFuncion $tipoFuncion = NULL)
    {
        $this->__load();
        return parent::setTipoFuncion($tipoFuncion);
    }

    public function getTipoFuncion()
    {
        $this->__load();
        return parent::getTipoFuncion();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function setBecadobeca(\BecasMds\BecaBundle\Entity\BecadoBeca $becadobeca = NULL)
    {
        $this->__load();
        return parent::setBecadobeca($becadobeca);
    }

    public function getBecadobeca()
    {
        $this->__load();
        return parent::getBecadobeca();
    }

    public function addBecadobeca(\BecasMds\BecaBundle\Entity\BecadoBeca $becadobeca)
    {
        $this->__load();
        return parent::addBecadobeca($becadobeca);
    }

    public function removeBecadobeca(\BecasMds\BecaBundle\Entity\BecadoBeca $becadobeca)
    {
        $this->__load();
        return parent::removeBecadobeca($becadobeca);
    }

    public function getBecaLista()
    {
        $this->__load();
        return parent::getBecaLista();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'monto', 'activo', 'fechaAlta', 'fechaBaja', 'tipoBeca', 'becadobeca', 'tipoFuncion');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}