<?php

namespace Proxies\__CG__\BecasMds\PersonaBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Referente extends \BecasMds\PersonaBundle\Entity\Referente implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setDni($dni)
    {
        $this->__load();
        return parent::setDni($dni);
    }

    public function getDni()
    {
        $this->__load();
        return parent::getDni();
    }

    public function setApellidos($apellidos)
    {
        $this->__load();
        return parent::setApellidos($apellidos);
    }

    public function getApellidos()
    {
        $this->__load();
        return parent::getApellidos();
    }

    public function setNombres($nombres)
    {
        $this->__load();
        return parent::setNombres($nombres);
    }

    public function getNombres()
    {
        $this->__load();
        return parent::getNombres();
    }

    public function setTelefono($telefono)
    {
        $this->__load();
        return parent::setTelefono($telefono);
    }

    public function getTelefono()
    {
        $this->__load();
        return parent::getTelefono();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setDomicilio($domicilio)
    {
        $this->__load();
        return parent::setDomicilio($domicilio);
    }

    public function getDomicilio()
    {
        $this->__load();
        return parent::getDomicilio();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function addMovimientoSocial(\BecasMds\PersonaBundle\Entity\MovimientoSocial $movimientoSocial)
    {
        $this->__load();
        return parent::addMovimientoSocial($movimientoSocial);
    }

    public function removeMovimientoSocial(\BecasMds\PersonaBundle\Entity\MovimientoSocial $movimientoSocial)
    {
        $this->__load();
        return parent::removeMovimientoSocial($movimientoSocial);
    }

    public function getMovimientoSocial()
    {
        $this->__load();
        return parent::getMovimientoSocial();
    }

    public function getReferentesLista()
    {
        $this->__load();
        return parent::getReferentesLista();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'dni', 'apellidos', 'nombres', 'telefono', 'email', 'movimientoSocial');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}